class InterfazUsuario:
    @staticmethod
    def obtener_opcion(mensaje):
        while True:
            opcion = input(mensaje)
            if opcion.isdigit():
                return int(opcion)
            print("¡Opción inválida!")

    @staticmethod
    def obtener_entero_positivo(mensaje):
        while True:
            valor = input(mensaje)
            if valor.isdigit() and int(valor) > 0:
                return int(valor)
            print("¡Valor inválido!")

    @staticmethod
    def obtener_decimal_positivo(mensaje):
        while True:
            valor = input(mensaje)
            try:
                valor = float(valor)
                if valor > 0:
                    return valor
                print("¡Valor inválido!")
            except ValueError:
                print("¡Valor inválido!")

class Pedidos:
    def recibir_pedido_en_restaurante(self):

        categorias = {
            "1": ("Comida", {
                "1": ("Pizza Margherita", 3000),
                "2": ("Hamburguesa", 3500),
                "3": ("Pasta", 2800)
            }),
            "2": ("Ensalada", {
                "1": ("Ensalada César", 2500),
                "2": ("Ensalada Caprese", 2200),
                "3": ("Ensalada Mixta", 2000)
            }),
            "3": ("Postre", {
                "1": ("Tarta de Manzana", 1800),
                "2": ("Helado", 1500),
                "3": ("Flan", 1200)
            }),
            "4": ("Bebidas", {
                "1": ("Refresco", 1000),
                "2": ("Agua Mineral", 800),
                "3": ("Jugo Natural", 1200)
            })
        }
        pedido = []
        total = 0

        while True:
            print("\n--------------MENÚ----------------")
            for codigo, (categoria, _) in categorias.items():
                print("◤-------------------------------◥")
                print(f"----({codigo}). {categoria}")
                print("◣-------------------------------◢")
            categoria_opcion = input("Ingrese el código de la categoría (0 para finalizar el pedido total): ")
            if categoria_opcion == "0":
                break
            elif categoria_opcion not in categorias:
                print("¡Categoría inválida!")
                continue

            _, productos = categorias[categoria_opcion]

            print("\nProductos:")
            for codigo, (producto, valor) in productos.items():
                print("◤-------------------------------◥")
                print(f"----({codigo}). {producto} - ${valor}")
                print("◣-------------------------------◢")
                
            while True:
                opcion = input("Ingrese el código del producto (0 para finalizar la categoría, 'exit' para finalizar el pedido total): ")
                if opcion == "0":
                    break
                elif opcion == "exit":
                    print("\nPedido realizado en el restaurante:", pedido)
                    print("Total a pagar: $", total)
                    return pedido, total
                elif opcion in productos:
                    pedido.append(productos[opcion][0])
                    total += productos[opcion][1]
                else:
                    print("¡Opción inválida!")

        print("\nPedido realizado en el restaurante:", pedido)
        print("Total a pagar: $", total)
        return pedido, total


class Pagos:
    def procesar_pago(self, total):
        while True:
            monto_ingresado = int(input("Ingrese el monto a pagar: $"))
            if monto_ingresado < total:
                print("¡Monto insuficiente!")
            elif monto_ingresado > total:
                cambio = monto_ingresado - total
                print("Pago exitoso. Su cambio es: $", cambio)
                break


class Reservas:
    def hacer_reserva(self, fecha, hora, num_personas):
        print(f"Haciendo reserva para {num_personas} personas el {fecha} a las {hora}")


class Inventario:
    def actualizar_inventario(self, producto, cantidad):
        print(f"Actualizando inventario: {producto} - {cantidad} unidades")


class Mesas:
    def asignar_mesa(self, num_mesa, num_personas):
        print(f"Asignando mesa {num_mesa} para {num_personas} personas")


class InformesVentas:
    def generar_informe_ventas(self):
        print("Generando informe de ventas en tiempo real")


# Fachada

class SistemaRestauranteFacade:
    def __init__(self):
        self.pedidos = Pedidos()
        self.pagos = Pagos()
        self.reservas = Reservas()
        self.inventario = Inventario()
        self.mesas = Mesas()
        self.informes_ventas = InformesVentas()

    def realizar_pedido_en_restaurante(self):
        pedido, total = self.pedidos.recibir_pedido_en_restaurante()
        self.pagos.procesar_pago(total)

    def hacer_reserva(self, fecha, hora, num_personas):
        self.reservas.hacer_reserva(fecha, hora, num_personas)

    def actualizar_inventario(self, producto, cantidad):
        self.inventario.actualizar_inventario(producto, cantidad)

    def asignar_mesa(self, num_mesa, num_personas):
        self.mesas.asignar_mesa(num_mesa, num_personas)

    def generar_informe_ventas(self):
        self.informes_ventas.generar_informe_ventas()


# Uso del sistema

def main():
    sistema_restaurante = SistemaRestauranteFacade()

    while True:
        print("\nCategorías:")
        print("◤-------------------------------◥")
        print("---( 1 ). Realizar Pedido")
        print("---( 2 ). Hacer Reserva")
        print("---( 3 ). Actualizar Inventario")
        print("---( 4 ). Asignar Mesas")
        print("---( 0 ). Salir")
        print("◣-------------------------------◢")

        opcion = input("Ingrese el número de la categoría (0 para salir): ")

        if opcion == "1":
            sistema_restaurante.realizar_pedido_en_restaurante()
        elif opcion == "2":
            fecha = input("Ingrese la fecha de la reserva (formato YYYY-MM-DD): ")
            hora = input("Ingrese la hora de la reserva: ")
            num_personas = int(input("Ingrese el número de personas: "))
            sistema_restaurante.hacer_reserva(fecha, hora, num_personas)
        elif opcion == "3":
            producto = input("Ingrese el nombre del producto: ")
            cantidad = int(input("Ingrese la cantidad a actualizar: "))
            sistema_restaurante.actualizar_inventario(producto, cantidad)
        elif opcion == "4":
            num_mesa = int(input("Ingrese el número de mesa: "))
            num_personas = int(input("Ingrese el número de personas: "))
            sistema_restaurante.asignar_mesa(num_mesa, num_personas)
        elif opcion == "0":
            break
        else:
            print("¡Opción inválida!")

    print("Saliendo del sistema...")


if __name__ == '__main__':
    main()
